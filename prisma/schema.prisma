// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String
  image         String?
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  posts         Post[]
}

model Post {
  id               String     @id @default(cuid())
  title            String
  videoId          String
  publishDate      DateTime   @default(now())
  videoPublishedAt DateTime?
  channelTitle     String?
  author           User?      @relation(fields: [authorId], references: [id])
  authorId         String?
  tracklist        TrackList[]
  credits          Credit[]
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
}

model TrackList {
  id        String   @id @default(cuid())
  time      String
  title     String
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Credit {
  id        String   @id @default(cuid())
  role      String
  name      String
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}
